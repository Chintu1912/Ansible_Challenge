---
- hosts: all
  become: yes
  vars_files:
    - vault.yml

  tasks:
    - name: Install standard CA certificates
      package:
        name: ca-certificates
        state: present

    - name: Install custom CA certificates
      copy:
        src: "{{ item }}"
        dest: /usr/local/share/ca-certificates/{{ item | basename }}
        mode: '0644'
      loop:
        - files/CA1.crt
        - files/CA2.crt
        - files/CA3.crt
      notify:
        - update-ca-certificates

    - name: Ensure custom CA certificates are valid (not expired)
      command: openssl x509 -noout -checkend 0 -in /usr/local/share/ca-certificates/{{ item | basename }}
      loop:
        - files/CA1.crt
        - files/CA2.crt
        - files/CA3.crt
      register: ca_validity_check
      failed_when: false
      changed_when: false
      ignore_errors: yes

    - name: Create deployment directory
      file:
        path: /opt/example/
        state: directory
        mode: '0755'
    
    - name: Copy app.py to remote host
      copy:
        src: /root/Ansible_Challenge/files/app.py
        dest: /opt/example/app.py  
        owner: root
        group: root
        mode: '0644'

    - name: Create virtual environment
      command: python3 -m venv /opt/example/venv

    - name: Create directory for instance configuration
      file:
        path: /opt/example/venv/var/example-instance
        state: directory
        mode: '0755'  

    - name: Copy config.py to remote instance configuration directory
      copy:
        src: /root/Ansible_Challenge/templates/config.py 
        dest: /opt/example/venv/var/example-instance/config.py
        mode: '0644' 

    - name: Copy Flask app wheel file to deployment directory
      copy:
        src: /root/Ansible_Challenge/files/Example-1.1.2-py3-none-any.whl
        dest: /opt/example/
        mode: '0644'

    - name: Install the Flask app wheel file
      pip:
        virtualenv: /opt/example/venv
        name: /opt/example/Example-1.1.2-py3-none-any.whl

    - name: Create instance directory for configuration
      file:
        path: /opt/example/instance
        state: directory
        mode: '0755'

    - name: Deploy config.py to instance folder
      template:
        src: templates/config.py.j2
        dest: /opt/example/instance/config.py
        mode: '0644'

    - name: Deploy run.sh script
      template:
        src: templates/run.sh.j2
        dest: /opt/example/run.sh
        mode: '0755'

    - name: Create systemd service for the Flask app
      template:
        src: templates/example.service.j2
        dest: /etc/systemd/system/example.service
        mode: '0644'
      notify:
        - systemctl daemon-reload
        - systemctl start example
        - systemctl enable example

    - name: Ensure virtual environment is activated and package is installed
      shell: |
        source /opt/example/venv/bin/activate
        pip install /opt/example/Example-1.1.2-py3-none-any.whl
      args:
        executable: /bin/bash

    - name: Ensure Gunicorn is running with the app
      shell: |
        /opt/example/venv/bin/gunicorn --chdir /opt/example -b 0.0.0.0:5000 app:app
      args:
        executable: /bin/bash
      async: 10  # To prevent long waits, Gunicorn runs in the background.
      poll: 0  # Let Gunicorn run in the background and move on

    - name: Check if Gunicorn is running
      shell: pgrep -f gunicorn
      register: gunicorn_pid
      ignore_errors: true

    - name: Fail if Gunicorn is not running
      fail:
        msg: "Gunicorn failed to start."
      when: gunicorn_pid is not defined

  handlers:
    - name: update-ca-certificates
      command: update-ca-certificates

    - name: systemctl daemon-reload
      command: systemctl daemon-reload

    - name: systemctl start example
      command: systemctl start example

    - name: systemctl enable example
      command: systemctl enable example

# Tasks for localhost
- hosts: localhost
  become: yes
  connection: local
  tasks:
    - name: Create virtual environment on localhost
      command: python3 -m venv /opt/example/venv

    - name: Install the Flask app wheel file on localhost
      pip:
        virtualenv: /opt/example/venv
        name: /opt/example/Example-1.1.2-py3-none-any.whl

    - name: Ensure Gunicorn is running on localhost
      shell: |
        /opt/example/venv/bin/gunicorn --chdir /opt/example -b 0.0.0.0:5000 app:app
      args:
        executable: /bin/bash
      async: 10
      poll: 0

